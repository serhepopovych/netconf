#!/bin/sh -e

iproute2_dir="$ROOT/etc/iproute2"

## group

f="$iproute2_dir/group"
if prepare_file "$f"; then
	begin_header "$f"

	cat >>"$f" <<'_EOF'

# From kernel perspective group numbers are seen as plain
# 32-bit integer threated as unsigned.
#
# Each new interface created in default(0) network device
# group if other group id is not given at creation.
#
# Network device group -1 (0xffffffff) might have special
# meaning using this group id is not recommended.

# Following groups currently supported:
#
#    0x00 - default
#    0x01 - uplink
#    0x02 - downlink
#    0x03 - loopback
#    0x04 - management
#    0x05 - unnumbered
#    0x06 - sink

0x0f	mask
0xf0	submask

0x01	uplink
0x02	downlink
0x03	loopback
0x04	management
0x05	unnumbered
0x06	sink

0xffff00	rlm_mask

0x000000	rlm_cosmos
0x000100	rlm_sink
0x000200	rlm_parity
0x000400	rlm_lo
0x000800	rlm_wo

# Predefined group names
0		default
0xffffffff	invalid
0xffffffff	_reserved

_EOF

	end_header "$f"
fi

## rt_proto

f="$iproute2_dir/rt_protos"
if prepare_file "$f"; then
	begin_header "$f"

	cat >>"$f" <<'_EOF'

#
#	netconf routes
#
200	netconf

_EOF

	end_header "$f"
fi

## rt_realms

f="$iproute2_dir/rt_realms"
if prepare_file "$f"; then
	begin_header "$f"

	cat >>"$f" <<'_EOF'

0xffff	mask

0x0001	sink
0x0002	parity
0x0004	lo
0x0008	wo

_EOF

	end_header "$f"
fi

## rt_tables

f="$iproute2_dir/rt_tables"
if prepare_file "$f"; then
	begin_header "$f"

	cat >>"$f" <<'_EOF'

#
# Divert
#
0x10	divert	# 16

#
# Parity
#
0x20	parity	# 32

#
# LO
#
0x40	lo	# 64

#
# WO
#
0x80	wo	# 128

#
# Management
#
0xd0	mgmt	# 208

#
# Internet
#
0xe0	inet	# 224

#
# Sink
#
0xf0	sink	# 240

_EOF

	end_header "$f"
fi

## Make /etc/ip6tables directory symlink to iptables if does not exist

iptables_dir="$ROOT/etc/iptables"
ip6tables_dir="$ROOT/etc/ip6tables"

if [ -e "$iptables_dir" -a ! -e "$ip6tables_dir" ]; then
	ln -sf 'iptables' "$ip6tables_dir"
fi

return 0
